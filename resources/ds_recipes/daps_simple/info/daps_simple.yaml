---
# Dataset Recipe:
# each recipe is a set of rules to select voices/heads/rooms to be used to 
# render a selection of audio scenes.
syntax:
  name: ds_recipe
  version:
    major: 0
    minor: 1
    revision: 0

#
# recipe
#
name: daps_simple

output:
  path: datasets/daps_simple
  store_info: True
  audio:
    format:
      type: wav
      subtype: pcm_s16le
      samplerate: 48000

#
# set is a collection of scenes that will be grouped in a subfolder (same name)
#
sets:
  # train/test/validate : only listed sets will be rendered

  train:
    # each task is a separate selection
    # of voices/heads/rooms needed to render a scene.
    # if you want to render each scene with default values
    # leave the voices/heads/rooms empty and the one
    # specified in the recipe will be used.

    # for voice/heads/rooms specification do not add the ".yaml"
    # use only filename without extention

    tasks:
      # note: if multiple voices are listed they will be used 
      #       according to the scene requirements, matching is done "in sorting order". 
      #       listing more voices than what is required by the scene will not have effects (skipped)

      # TRAIN/TASK #0
      0:
        # note: this task shows that you can mix&match scenes from different datasets using the right subtype
        #       in this task we use the resources listed in the recipes itself, no customization
        voices:
          0:
            subtype: daps
            info: ["00000*","00001*","00002*","00003*","00004*","00005*"]
        heads:
          0:
            subtype: unimore
            info: ["head_003"]
        rooms:
        scenes:
          0:
            subtype: unimore
            info: ["000000_static_singlevoice"]

  test:
    tasks:    
      # TEST/TASK #0
      0:
        # note: this task shows that you can mix&match scenes from different datasets using the right subtype
        #       in this task we use the resources listed in the recipes itself, no customization
        voices:
          0:
            subtype: daps
            info: ["00006*","00007*"]
        heads:
          0:
            subtype: unimore
            info: ["head_003"]
        rooms:
        scenes:
          0:
            subtype: unimore
            info: ["000000_static_singlevoice"]


  validate:
    tasks:    
      # VALIDATE/TASK #0
      0:
        # note: this task shows that you can mix&match scenes from different datasets using the right subtype
        #       in this task we use the resources listed in the recipes itself, no customization
        voices:
          0:
            subtype: daps
            info: ["00009*"]
        heads:
          0:
            subtype: unimore
            info: ["head_003"]
        rooms:
        scenes:
          0:
            subtype: unimore
            info: ["000000_static_singlevoice"]

#
# script hooks & lib import for data preparation (optional)
#
hooks:
# t.b.d (still needed to define syntax)
# the idea is to allow pre and post processing, like for example 
# to add "analog pink noise" to the rendering and simulate
# analog mic "hissing"
# note: we might need to move this "inside" the task level definition

#EOF
...
